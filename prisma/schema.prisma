// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
//user is having list of events
// define which field of the event is tagged with user
model User {
  id      String      @unique @default(uuid())
  clerkUserId String @unique
  email String @unique
  userName String @unique
  name String 
  imgUrl String?
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
  events Event[] @relation("UserEvents")
  bookings Booking[] @relation("UserBookings")
  availability Availability?
  
}
model Event{
  id String @id @default(uuid())
  title String
  description String?
  duration Int
  userId String
  user User @relation("UserEvents",fields: [userId],references: [id])
  bookings Booking[]
  isPrivate Boolean @default(true)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

}
model Booking{
  id String @id @default(uuid())
  eventId String
  event Event @relation(fields: [eventId],references: [id],onDelete: Cascade)
  user User @relation("UserBookings" , fields: [userId],references: [id])
  userId String
  name String
  email String
  additionalInfo String?
  startTime DateTime
  endTime DateTime
  meetLink String
  googleEventId String
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Availability{
  id String @id @default(uuid())
  userId String  @unique
  user User @relation(fields: [userId],references: [id])
  days DaysAvailability[]
  timeGap Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

}

model DaysAvailability{
  id String @id @default(uuid())
  availability String
  day DayOfWeek
  startTime DateTime
  endTime DateTime
  avilalbility Availability @relation(fields: [availability],references: [id])
}

enum DayOfWeek{
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}


